{
	"name": "dataflowDonneesSfAccount",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableSfAccount",
						"type": "DatasetReference"
					},
					"name": "sourceSfAccount"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableSfAccount",
						"type": "DatasetReference"
					},
					"name": "sinkSfAccount"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "SurrogateKey1"
				}
			],
			"script": "source(output(\n\t\tClientNumeroduCompte as string,\n\t\tId as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT ClientNumeroduCompte, Id FROM sf.[REC DonnÃ©es Account]',\n\tformat: 'query') ~> sourceSfAccount\nSurrogateKey1 split(lesserOrEqual(SurrogateId, 1000),\n\tdisjoint: false) ~> ConditionalSplit1@(Incluses)\nsourceSfAccount keyGenerate(output(SurrogateId as long),\n\tstartAt: 1L) ~> SurrogateKey1\nConditionalSplit1@Incluses sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tId,\n\t\tClientNumeroduCompte\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sinkSfAccount"
		}
	}
}